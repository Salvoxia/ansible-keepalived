---
name: CI
'on':
  workflow_dispatch:
  pull_request:
  push:
    paths-ignore:
      - 'README.md'
  schedule:
    - cron: '00 12 10 * *'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install test dependencies
        run: pip3 install yamllint

      - name: Install ansible test dependencies
        run: ansible-galaxy install -r molecule/test_requirements.yml --force

      - name: Run Yamllint
        run: |
          yamllint .

      - name: Run ansible-lint
        uses: ansible/ansible-lint@v24.12.2
  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        distro:
          - centos8
          - rockylinux9
          - debian10
          - debian11
          - debian12
          - ubuntu2204
          - ubuntu2404

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install test dependencies (CentOS 8 / Debian 10 / Rockylinux 9).
        run: pip3 install ansible==9.13.0 molecule molecule-docker yamllint ansible-lint docker netaddr dnspython
        if: matrix.distro == 'centos8' || matrix.distro == 'debian10' || matrix.distro == 'rockylinux9'

      - name: Install test dependencies.
        run: pip3 install ansible molecule molecule-docker yamllint ansible-lint docker netaddr dnspython
        if: matrix.distro != 'centos8' && matrix.distro != 'debian10'  && matrix.distro != 'rockylinux9'

      - name: Install ansible test dependencies
        run: ansible-galaxy install -r molecule/test_requirements.yml --force

      - name: Run Molecule Default test
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

      - name: Run Molecule Masked Keepalived Test
        run: molecule test --scenario-name masked-keepalived
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

      - name: Run Molecule Reconfigure Keepalived Test
        run: molecule test --scenario-name reconfigure-keepalived
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

      - name: Run Molecule Install from Source Test
        run: molecule test --scenario-name install-from-source
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

      - name: Run Molecule Uninstall from Source Test
        run: molecule test --scenario-name uninstall-from-source
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

      - name: Run Molecule Switch from Package Manager to Source Installation Test
        run: molecule test --scenario-name switch-from-pkgmgr-to-source
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

      - name: Run Molecule Switch from Source Installation to Package Manager Test
        run: molecule test --scenario-name switch-from-source-to-pkgmgr
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
