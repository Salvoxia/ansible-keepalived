---
- name: Get installed keepalived version
  ansible.builtin.include_tasks: get_installed_version.yml

- name: Set testability flag
  ansible.builtin.set_fact:
    keepalived_config_testable: "{{ keepalived_installed_version | regex_search('v(.*)', '\\1') | join('.') is version('2.0.4', 'ge') }}"
  tags:
    - keepalived-config

- name: Ensure no new "samples" folder appeared
  ansible.builtin.file:
    path: /etc/keepalived/samples/
    state: absent
  when:
    - ansible_facts['os_family'] | lower == 'debian'
  tags:
    - keepalived-install

- name: Get IPv6 enabled state
  ansible.builtin.slurp:
    src: /sys/module/ipv6/parameters/disable
  register: _ipv6_disabled
  tags:
    - keepalived-install

- name: Check if IPv6 is enabled
  ansible.builtin.set_fact:
    ipv6_enabled: "{{ not _ipv6_disabled.failed and '0' in (_ipv6_disabled.content | b64decode) }}"
  tags:
    - keepalived-install

- name: Allow consuming apps to bind on non local addresses for IPv4
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: yes
    state: present
  when: keepalived_bind_on_non_local | bool
  loop:
    - name: "net.ipv4.ip_nonlocal_bind"
      value: 1
    - name: "net.ipv4.tcp_retries2"
      value: "{{ keepalived_sysctl_tcp_retries }}"
  notify:
    - Restart keepalived
  tags:
    - keepalived-install

- name: Allow consuming apps to bind on non local addresses for IPv6
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: yes
    state: present
  when: keepalived_bind_on_non_local | bool
        and ipv6_enabled
  loop:
    - name: "net.ipv6.ip_nonlocal_bind"
      value: 1
  notify:
    - Restart keepalived
  tags:
    - keepalived-install

- name: Check that daemon options file exists
  ansible.builtin.stat:
    path: "{{ keepalived_daemon_options_file_path }}"
  register: keepalived_daemon_options_file
  tags:
    - keepalived-config

- name: Configure keepalived extra params
  ansible.builtin.lineinfile:
    line: "{{ item }}"
    regexp: "^{{ item.split('=')[0] }}"
    dest: "{{ keepalived_daemon_options_file_path }}"
    state: present
  loop: "{{ keepalived_daemon_default_options_overrides }}"
  when: keepalived_daemon_options_file.stat.exists
  notify:
    - Restart keepalived
  tags:
    - keepalived-config

- name: Dropping the tracking scripts
  ansible.builtin.copy:
    src: "{{ item.value.src_check_script }}"
    dest: "{{ item.value.dest_check_script | default(item.value.check_script) }}"
    mode: "0755"
  loop: "{{ keepalived_scripts | dict2items }}"
  when: "'src_check_script' in item.value"
  notify:
    - Reload keepalived
  tags:
    - keepalived-config

- name: Dropping the general notification scripts
  ansible.builtin.copy:
    src: "{{ item.value.src_notify_script }}"
    dest: "{{ item.value.notify_script }}"
    mode: "0755"
  loop: "{{ keepalived_sync_groups | dict2items }}"
  when: "'src_notify_script' in item.value"
  notify:
    - Reload keepalived
  tags:
    - keepalived-config

- name: Dropping the notification scripts for switching to master
  ansible.builtin.copy:
    src: "{{ item.value.src_notify_master }}"
    dest: "{{ item.value.notify_master }}"
    mode: "0755"
  loop: "{{ keepalived_sync_groups | dict2items }}"
  when: "'src_notify_master' in item.value"
  notify:
    - Reload keepalived
  tags:
    - keepalived-config

- name: Dropping the notification scripts for switching to backup
  ansible.builtin.copy:
    src: "{{ item.value.src_notify_backup }}"
    dest: "{{ item.value.notify_backup }}"
    mode: "0755"
  loop: "{{ keepalived_sync_groups | dict2items }}"
  when: "'src_notify_backup' in item.value"
  notify:
    - Reload keepalived
  tags:
    - keepalived-config

- name: Dropping the notification scripts for failures
  ansible.builtin.copy:
    src: "{{ item.value.src_notify_fault }}"
    dest: "{{ item.value.notify_fault }}"
    mode: "0755"
  loop: "{{ keepalived_sync_groups | dict2items }}"
  when: "'src_notify_fault' in item.value"
  notify:
    - Reload keepalived
  tags:
    - keepalived-config

- name: Dropping the general notification scripts (instances)
  ansible.builtin.copy:
    src: "{{ item.value.src_notify_script }}"
    dest: "{{ item.value.notify_script }}"
    mode: "0755"
  loop: "{{ keepalived_instances | dict2items }}"
  when: "'src_notify_script' in item.value"
  notify:
    - Reload keepalived
  tags:
    - keepalived-config

- name: Dropping the notification scripts for switching to master (instances)
  ansible.builtin.copy:
    src: "{{ item.value.src_notify_master }}"
    dest: "{{ item.value.notify_master }}"
    mode: "0755"
  loop: "{{ keepalived_instances | dict2items }}"
  when: "'src_notify_master' in item.value"
  notify:
    - Reload keepalived
  tags:
    - keepalived-config

- name: Dropping the notification scripts for lower priority master case (instances)
  ansible.builtin.copy:
    src: "{{ item.value.src_notify_master_rx_lower_pri }}"
    dest: "{{ item.value.notify_master_rx_lower_pri }}"
    mode: "0755"
  loop: "{{ keepalived_instances | dict2items }}"
  when: "'src_notify_master_rx_lower_pri' in item.value"
  notify:
    - Reload keepalived
  tags:
    - keepalived-config

- name: Dropping the notification scripts for switching to backup (instances)
  ansible.builtin.copy:
    src: "{{ item.value.src_notify_backup }}"
    dest: "{{ item.value.notify_backup }}"
    mode: "0755"
  loop: "{{ keepalived_instances | dict2items }}"
  when: "'src_notify_backup' in item.value"
  notify:
    - Reload keepalived
  tags:
    - keepalived-config

- name: Dropping the notification scripts for stopping vrrp (instances)
  ansible.builtin.copy:
    src: "{{ item.value.src_notify_stop }}"
    dest: "{{ item.value.notify_stop }}"
    mode: "0755"
  loop: "{{ keepalived_instances | dict2items }}"
  when: "'src_notify_stop' in item.value"
  notify:
    - Reload keepalived
  tags:
    - keepalived-config

- name: Dropping the notification scripts for failures (instances)
  ansible.builtin.copy:
    src: "{{ item.value.src_notify_fault }}"
    dest: "{{ item.value.notify_fault }}"
    mode: "0755"
  loop: "{{ keepalived_instances | dict2items }}"
  when: "'src_notify_fault' in item.value"
  notify:
    - Reload keepalived
  tags:
    - keepalived-config

- name: Configure keepalived
  ansible.builtin.template:
    src: keepalived.conf.j2
    dest: "{{ keepalived_config_file_path }}"
    mode: "0640"
    validate: "{{ keepalived_config_testable | ternary('keepalived --config-test -f %s', omit) }}"
  notify:
    - Reload keepalived
  tags:
    - keepalived-config

- name: Make directory for keepalived's systemd overrides
  ansible.builtin.file:
    path: /etc/systemd/system/keepalived.service.d/
    state: directory
    mode: "0755"
  when:
    - keepalived_systemd_overrides | bool
  tags:
    - keepalived-install

- name: Apply keepalived override to start after network is up
  community.general.ini_file:
    path: /etc/systemd/system/keepalived.service.d/override.conf
    create: yes
    section: 'Unit'
    option: "{{ item }}"
    value: 'network-online.target'
    mode: '0644'
  loop:
    - 'Wants'
    - 'After'
  when:
    - keepalived_systemd_overrides | bool
  notify:
    - Restart keepalived
  tags:
    - keepalived-install

- name: Apply keepalived override to restart service always
  community.general.ini_file:
    path: /etc/systemd/system/keepalived.service.d/override.conf
    section: 'Service'
    option: "Restart"
    value: 'always'
    mode: '0644'
  when:
    - keepalived_systemd_overrides | bool
    - keepalived_systemd_override_service_restart | bool
  notify:
    - Restart keepalived
  tags:
    - keepalived-install

- name: Remove keepalived overrides
  ansible.builtin.file:
    path: /etc/systemd/system/keepalived.service.d/override.conf
    state: absent
  when:
    - not (keepalived_systemd_overrides | bool)
  tags:
    - keepalived-install

- name: Ensuring keepalived is enabled and started
  ansible.builtin.service:
    daemon_reload: yes
    name: "{{ keepalived_service_name }}"
    state: "started"
    enabled: "yes"
    masked: "no"
  register: _servicestart
  tags:
    - keepalived-install
